from app.model import AIModel
from PIL import Image
import streamlit as st
import numpy as np

def read_image(source):
    return Image.open(source)

# declaring AI Model
model = AIModel()
model.load_model("conf/trained_model.h5", "conf/dictionary.txt", "conf/word_count.txt", "conf/conf.txt")


# interface layout
st.set_page_config(page_title="AI Image Caption Generator")
st.markdown("""
<center>

## Auto Caption
Image caption generated by AI ðŸ¤–

[![https://google.com](https://img.shields.io/badge/twitter-@Rizki57374389-73adff?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/Rizki57374389)
[![rizki4106](https://img.shields.io/badge/github-ffffff?style=for-the-badge&logo=github&logoColor=black)](https://github.com/rizki4106)
[![linked in](https://img.shields.io/badge/linkedin-025E8C?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/rizki-maulana-8ab5a220b/)

<hr/>
</center>
<br/>
""", unsafe_allow_html=True)

image = st.file_uploader("Upload Gambar", type=["jpg", "jpeg", "png", "voc"])

if image is not None:
    bytes_data = image.getvalue()

    # convert image to array
    array_image = np.array(read_image(image).resize((224, 224)).convert("RGB")).reshape(1, 224, 224, 3)

    # show output
    text = "loading..."
    st.image(read_image(image), width=512)

    # predict the caption
    with st.spinner('loading...'):
        text = model.predict_from_array(array_image)

    #
    st.write(text)